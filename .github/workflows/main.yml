name: Website Deployment

on: [push]

env:
  location: eastus
  appName: familywebsite
  environ: dev
  domainName: 'thehodgesfamily.net'
  indexDocument: 'index.html'
  errorDocument404Path: 'error.html'
  DnsZone: '/subscriptions/2f9cc458-4951-43a4-8231-a7b3c75b5473/resourceGroups/Core_Services/providers/Microsoft.Network/dnszones/thehodgesfamily.net'
  PYTHON_VERSION: '3.11'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './api'
  AZURE_FUNCTIONAPP_NAME: 'VisitCountApp'

jobs:
  create-rg:
    runs-on: ubuntu-latest
    outputs:
      rgName: ${{ steps.rg.outputs.rgName }}
      actualAppName: ${{steps.rg.outputs.actualAppName}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          
      
      - name: Create rg
        id: rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.location }}
          template: ./create_rg.json
          parameters: appName=${{env.appName}} environment=${{env.environ}} location=${{env.location}}

  create-storage:
    runs-on: ubuntu-latest
    needs: create-rg
    outputs:
      storageName: ${{steps.storage.outputs.storageName}}
      storageWebEndpoint: ${{steps.storage.outputs.storageWebEndpoint}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'

      - name: Create Storage
        uses: azure/arm-deploy@v2
        id: storage
        with:
          scope: resourcegroup
          resourceGroupName: ${{ needs.create-rg.outputs.rgName }}
          template: ./create_storage.json
          parameters: appName=${{env.appName}} environment=${{env.environ}}

  create-cdn:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage]
    outputs:
      profileName: ${{steps.cdn.outputs.profileName}}
      customDomainName: ${{steps.cdn.outputs.customDomainName}}
      endpointName: ${{steps.cdn.outputs.endpointName}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'

      - name: Create CDN
        uses: azure/arm-deploy@v2
        id: cdn
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_cdn.json
          parameters: appName=${{env.appName}} environment=${{env.environ}} DnsZone=${{env.DnsZone}} domainName=${{env.domainName}} storageWebEndpoint=${{needs.create-storage.outputs.storageWebEndpoint}}

  create-db:
    runs-on: ubuntu-latest
    needs: create-rg
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Create DB
        uses: azure/arm-deploy@v2
        id: db
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_db.json
          parameters: appName=${{env.appName}} environment=${{env.environ}}

  deploy-dns:
    runs-on: ubuntu-latest
    needs: [create-rg,create-cdn]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true

      - name: Deploy DNS
        uses: azure/powershell@v2
        id: dns
        with:
          
          inlineScript: |
            $ErrorActionPreference = 'Stop'
            Set-AzContext -Subscription "2f9cc458-4951-43a4-8231-a7b3c75b5473"
            $rs = Get-AzDnsRecordSet -Name ${{env.environ}} -RecordType CNAME -ZoneName ${{env.domainName}} -ResourceGroupName "core_services"
            Remove-AzDnsRecordConfig -RecordSet $rs -Cname $rs.Records.cname | Set-AzDnsRecordSet
            $newcname = '${{needs.create-cdn.outputs.endpointName}}'
            Get-AzDnsRecordSet -name ${{env.environ}} -RecordType CNAME -ZoneName ${{env.domainName}} -ResourceGroupName "core_services" | Add-AzDnsRecordConfig -Cname $newcname | Set-AzDnsRecordSet
          azPSVersion: "latest"
  
  create-customdomain:
    runs-on: ubuntu-latest
    needs: [create-rg,create-cdn,deploy-dns]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Create Custom Domain
        uses: azure/arm-deploy@v2
        id: cdom
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_customdomain.json
          parameters: profileName=${{needs.create-cdn.outputs.profileName}} appName=${{env.appName}} customHostName=${{needs.create-cdn.outputs.customDomainName}}
  
  enable-staticweb:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage,create-cdn,create-customdomain]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true

      - name: Enable Static Web
        uses: azure/powershell@v2
        with:
          inlineScript: |
            $ErrorActionPreference = 'Stop'
            $storageAccount = Get-AzStorageAccount -ResourceGroupName ${{needs.create-rg.outputs.rgName}} -AccountName ${{needs.create-storage.outputs.storageName}}
            $ctx = $storageAccount.Context
            Enable-AzStorageStaticWebsite -Context $ctx -IndexDocument $env:indexDocument -ErrorDocument404Path $env:errorDocument404Path
            $customDomainHttpsParameter = New-AzCdnManagedHttpsParametersObject -CertificateSourceParameterCertificateType Dedicated -CertificateSource Cdn -ProtocolType ServerNameIndication
            Enable-AzCdnCustomDomainCustomHttps -ResourceGroupName ${{needs.create-rg.outputs.rgName}} -ProfileName ${{needs.create-cdn.outputs.profileName}} -EndpointName ${{env.appName}} -CustomDomainName ${{needs.create-cdn.outputs.customDomainName}} -CustomDomainHttpsParameter $customDomainHttpsParameter
          azPSVersion: "latest"

  create-app:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage]
    outputs:
      appName: ${{steps.app.outputs.appName}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Create App
        uses: azure/arm-deploy@v2
        id: app
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_app.json
          parameters: environment=${{env.environ}} 

  deploy-app:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage,create-app]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      #- name: Login with Azure
      #  uses: azure/login@v2
      #  with:
      #    creds: ${{secrets.AZURE_CREDENTIALS}}
      #    enable-AzPSSession: true

      - name: Setup Python ${{ env.PYTHON_VERSION }} Environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
    
      - name: 'Resolve Project Dependencies Using Pip'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          popd
  
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ needs.create-app.outputs.appName }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
          scm-do-build-during-deployment: true
          enable-oryx-build: true