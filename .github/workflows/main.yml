name: Website Deployment

on: [push]

env:
  location: eastus
  appName: familywebsite
  environ: dev

jobs:
  create-rg:
    runs-on: ubuntu-latest
    outputs:
      rgName: ${{ steps.rg.outputs.rgName }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          
      
      - name: Create rg
        id: rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.location }}
          template: ./create_rg.json
          parameters: ./create_rg_storage.parameters.json

  create-storage:
    runs-on: ubuntu-latest
    needs: create-rg
    outputs:
      storageName: ${{steps.storage.outputs.storageName}}
      storageEndpoint: ${{steps.storage.outputs.storageEndpoint}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'

      - name: Create Storage
        uses: azure/arm-deploy@v2
        id: storage
        with:
          scope: resourcegroup
          resourceGroupName: ${{ needs.create-rg.outputs.rgName }}
          template: ./create_storage.json
          parameters: ./create_rg_storage.parameters.json

  create-afd:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'

      - name: Create Frontdoor
        uses: azure/arm-deploy@v2
        id: afd
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_afd.json
          parameters: ./create_afd.parameters.json storageEndpoint=${{needs.create-storage.outputs.storageEndpoint}}

  create-db:
    runs-on: ubuntu-latest
    needs: create-rg
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Create DB
        uses: azure/arm-deploy@v2
        id: db
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_db.json
          parameters: ./create_db.parameters.json

  script:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true

      - name: Enable Static Web
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $storageAccount = Get-AzStorageAccount -ResourceGroupName $env:resourceGroupName -AccountName $env:storageAccountName
          $ctx = $storageAccount.Context
          Enable-AzStorageStaticWebsite -Context $ctx -IndexDocument $env:indexDocument -ErrorDocument404Path $env:errorDocument404Path