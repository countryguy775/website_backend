name: Website Deployment

on: [push]

env:
  location: eastus
  appName: familywebsite
  environ: dev
  indexDocument: 'index.html'
  errorDocument404Path: 'error.html'

jobs:
  create-rg:
    runs-on: ubuntu-latest
    outputs:
      rgName: ${{ steps.rg.outputs.rgName }}
      actualAppName: ${{steps.rg.outputs.actualAppName}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          
      
      - name: Create rg
        id: rg
        uses: azure/arm-deploy@v2
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: ${{ env.location }}
          template: ./create_rg.json
          parameters: appName=${{env.appName}} environment=${{env.environ}}

  create-storage:
    runs-on: ubuntu-latest
    needs: create-rg
    outputs:
      storageName: ${{steps.storage.outputs.storageName}}
      storageEndpoint: ${{steps.storage.outputs.storageEndpoint}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'

      - name: Create Storage
        uses: azure/arm-deploy@v2
        id: storage
        with:
          scope: resourcegroup
          resourceGroupName: ${{ needs.create-rg.outputs.rgName }}
          template: ./create_storage.json
          parameters: ./create_rg_storage.parameters.json

  create-afd:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage]
    outputs:
      profileName: ${{steps.afd.outputs.profileName}}
      customDomainName: ${{steps.afd.outputs.customDomainName}}
      endpointName: ${{steps.afd.outputs.endpointName}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: '${{secrets.AZURE_CREDENTIALS}}'

      - name: Create Frontdoor
        uses: azure/arm-deploy@v2
        id: afd
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_afd.json
          parameters: ./create_afd.parameters.json storageEndpoint=${{needs.create-storage.outputs.storageEndpoint}}

  create-db:
    runs-on: ubuntu-latest
    needs: create-rg
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Create DB
        uses: azure/arm-deploy@v2
        id: db
        with:
          scope: resourcegroup
          resourceGroupName: ${{needs.create-rg.outputs.rgName}}
          template: ./create_db.json
          parameters: ./create_db.parameters.json

  script:
    runs-on: ubuntu-latest
    needs: [create-rg,create-storage,create-afd]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true

      - name: Enable Static Web
        uses: azure/powershell@v1
        with:
          inlineScript: |
            $ErrorActionPreference = 'Stop'
            $storageAccount = Get-AzStorageAccount -ResourceGroupName ${{needs.create-rg.outputs.rgName}} -AccountName ${{needs.create-storage.outputs.storageName}}
            $ctx = $storageAccount.Context
            Enable-AzStorageStaticWebsite -Context $ctx -IndexDocument $env:indexDocument -ErrorDocument404Path $env:errorDocument404Path
            $customDomainHttpsParameter = New-AzCdnManagedHttpsParametersObject -CertificateSourceParameterCertificateType Dedicated -CertificateSource Cdn -ProtocolType ServerNameIndication
            Enable-AzCdnCustomDomainCustomHttps -ResourceGroupName ${{needs.create-rg.outputs.rgName}} -ProfileName ${{needs.create-afd.outputs.profileName}} -EndpointName ${{needs.create-storage.outputs.storageEndpoint}} -CustomDomainName ${{needs.create-afd.outputs.customDomainName}} -CustomDomainHttpsParameter $customDomainHttpsParameter
          azPSVersion: "latest"

  deploy-dns:
    runs-on: ubuntu-latest
    needs: [create-rg,create-afd]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in with Azure
        uses: azure/login@v2
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}
          enable-AzPSSession: true

      - name: Deploy DNS
        uses: azure/powershell@v1
        id: dns
        with:
          
          inlineScript: |
            $ErrorActionPreference = 'Stop'
            Set-AzContext -Subscription "2f9cc458-4951-43a4-8231-a7b3c75b5473"
            $rs = Get-AzDnsRecordSet -Name "dev" -RecordType CNAME -ZoneName "thehodgesfamily.net" -ResourceGroupName "core_services"
            Remove-AzDnsRecordConfig -RecordSet $rs -Cname $rs.Records.cname | Set-AzDnsRecordSet
            $newcname = '${{needs.create-afd.outputs.endpointName}}'
            Get-AzDnsRecordSet -name "dev" -RecordType CNAME -ZoneName "thehodgesfamily.net" -ResourceGroupName "core_services" | Add-AzDnsRecordConfig -Cname $newcname | Set-AzDnsRecordSet
          azPSVersion: "latest"